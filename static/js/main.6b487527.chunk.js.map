{"version":3,"sources":["components/Country.js","components/SingleCountry.js","helperFunctions/isCountryMatch.js","components/Countries.js","App.js","index.js"],"names":["Country","country","setCountries","name","onClick","SingleCountry","useState","capitalWeather","setCapitalWeather","useEffect","axios","get","capital","then","response","temperature","data","current","temp_c","wind","wind_kph","key","population","languages","map","l","src","flag","alt","width","height","isCountryMatch","query","countryName","toLowerCase","i","length","charAt","Countries","countries","matchingCountries","filter","onlyOne","fewerThanTen","App","setQuery","type","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"kLAeeA,EAbC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAMvB,OACI,6BACI,gCAAMD,EAAQE,KAAd,KACA,4BAAQC,QARI,WAChBF,EAAa,CAAC,eACPD,OAMH,sBC8BGI,EAtCO,SAAC,GAAe,IAAdJ,EAAa,EAAbA,QAAa,EACWK,mBAAS,IADpB,mBAC1BC,EAD0B,KACVC,EADU,KAajC,OAXAP,EAAUA,EAAQ,GAClBQ,qBAAU,WACNC,IACKC,IADL,sFACwFV,EAAQW,UAC3FC,MAAK,SAAAC,GACFN,EAAkB,CACdO,YAAaD,EAASE,KAAKC,QAAQC,OACnCC,KAAML,EAASE,KAAKC,QAAQG,gBAGzC,CAACnB,EAAQW,UAER,yBAAKS,IAAKpB,EAAQE,MACd,4BAAKF,EAAQE,MACb,uCAAaF,EAAQW,SACrB,0CAAgBX,EAAQqB,YACxB,2CACA,4BACKrB,EACIsB,UACAC,KAAI,SAAAC,GAAC,OAAI,4BAAKA,EAAEtB,UAGzB,yBACIuB,IAAKzB,EAAQ0B,KACbC,IAAI,eACJC,MAAM,QACNC,OAAO,UAEX,0CAAgB7B,EAAQW,SACxB,2CAAiBL,EAAeQ,YAAhC,oBACA,oCAAUR,EAAeY,KAAzB,UCpBGY,EAhBQ,SAAC9B,EAAS+B,GAC7B,IAAMC,EAAchC,EAAQE,KAAK+B,cACjCF,EAAQA,EAAME,cAEd,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9B,GAAIH,EAAMK,OAAOF,KAAOF,EAAYI,OAAOF,GAKvC,OAAO,EAGf,OAAO,GC4BIG,EAjCG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWrC,EAAyB,EAAzBA,aAAc8B,EAAW,EAAXA,MAEpCQ,EAAoBD,EAAUE,QAAO,SAAAxC,GAAO,OAAI8B,EAAe9B,EAAS+B,MAE9E,OAAqB,IAAjBA,EAAMI,OAEF,kEATI,SAACG,GAAD,OAAoC,IAArBA,EAAUH,OAa5BM,CAAQF,GAET,kBAAE,EAAF,CAAgBvC,QAASuC,IAdhB,SAACD,GAAD,OAAeA,EAAUH,OAAS,GAiB1CO,CAAaH,GAEdA,EAAkBhB,KAAI,SAAAvB,GAAO,OACzB,kBAAC,EAAD,CACIoB,IAAKpB,EAAQE,KACbF,QAASA,EACTC,aAAcA,OAOtB,wECIG0C,EApCH,WAAO,IAAD,EACYtC,mBAAS,IADrB,mBACP0B,EADO,KACAa,EADA,OAEoBvC,mBAAS,IAF7B,mBAEPiC,EAFO,KAEIrC,EAFJ,KAkBd,OAFAO,qBARuB,WACnBC,IACCC,IAAI,wCACJE,MAAK,SAACC,GACHZ,EAAaY,EAASE,WAIJ,CAACgB,IAGvB,6BACI,kDAGA,2BACIc,KAAK,OACLC,SArBc,SAACC,GACvBH,EAASG,EAAMC,OAAOC,UAsBlB,kBAAC,EAAD,CACIX,UAAWA,EACXrC,aAAcA,EACd8B,MAAOA,MC9BvBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6b487527.chunk.js","sourcesContent":["import React from 'react'\n\nconst Country = ({country, setCountries}) => {\n    const handleClick = () => {\n        setCountries([{\n            ...country\n        }])\n    }\n    return(\n        <div>\n            <li> {country.name} </li>\n            <button onClick={handleClick}>Show Information</button>\n        </div>\n    )\n}\nexport default Country","import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nconst SingleCountry = ({country}) => {\n    const [capitalWeather, setCapitalWeather] = useState({})\n    country = country[0] // Take out only country object from array\n    useEffect(() =>{\n        axios\n            .get(`https://api.apixu.com/v1/current.json?key=1245018ff0804137a1e160726190706&q=${country.capital}`)\n            .then(response => {\n                setCapitalWeather({\n                    temperature: response.data.current.temp_c,\n                    wind: response.data.current.wind_kph\n                })\n            })\n    }, [country.capital])\n    return(\n        <div key={country.name}>\n            <h1>{country.name}</h1>\n            <p>Capital: {country.capital}</p>\n            <p>Population: {country.population}</p>\n            <h3>Languages: </h3>\n            <ul>\n                {country\n                    .languages\n                    .map(l => <li>{l.name}</li>\n                )}\n            </ul>\n            <img \n                src={country.flag} \n                alt=\"country flag\"\n                width=\"300px\"\n                height=\"150px\"\n            />\n            <h3>Weather in {country.capital}</h3>\n            <p>Temperature: {capitalWeather.temperature} degrees celcius</p>\n            <p>Wind: {capitalWeather.wind} kph</p>\n        </div>\n    )\n}\n\nexport default SingleCountry","const isCountryMatch = (country, query) => {\n    const countryName = country.name.toLowerCase()\n    query = query.toLowerCase()\n\n    for (let i = 0; i < query.length; i++) {\n        if (query.charAt(i) === countryName.charAt(i)) {\n            // corresponding countries match!\n        } \n        else {\n            // corresponding characters don't match!\n            return false\n        }\n    }\n    return true\n}\n\nexport default isCountryMatch","import React from 'react'\nimport Country from './Country'\nimport SingleCountry from './SingleCountry'\nimport isCountryMatch from '../helperFunctions/isCountryMatch'\n\nconst onlyOne = (countries) => countries.length === 1\nconst fewerThanTen = (countries) => countries.length < 10\n\nconst Countries = ({ countries, setCountries, query}) => {\n    \n    const matchingCountries = countries.filter(country => isCountryMatch(country, query))\n\n    if (query.length === 0) {\n        return (\n            <p>There were no matches to your query</p>\n        )\n    }\n\n    else if (onlyOne(matchingCountries)) {\n        return (\n            < SingleCountry country={matchingCountries} />\n        )\n    }\n    else if (fewerThanTen(matchingCountries)) {\n        return(\n            matchingCountries.map(country => \n                <Country \n                    key={country.name}\n                    country={country}\n                    setCountries={setCountries}\n                />\n            )\n        )\n    }\n    else {\n        return (\n            <p>Too many matches, specify another filter</p>\n        )\n    }\n}\n\nexport default Countries","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Countries from './components/Countries'\n\nconst App = () => {\n    const [query, setQuery] = useState('')\n    const [countries, setCountries] = useState([])\n    \n    const handleQueryChange = (event) => {\n        setQuery(event.target.value)\n    }\n    \n    const fetchCountries = () => {\n        axios\n        .get('https://restcountries.eu/rest/v2/all')\n        .then((response) => {\n            setCountries(response.data)\n        })\n    }\n\n    useEffect(fetchCountries, [query])\n\n    return(\n        <div>\n            <label>\n                Find countries: \n            </label>\n            <input \n                type=\"text\" \n                onChange={handleQueryChange}\n            />\n            <Countries \n                countries={countries}\n                setCountries={setCountries}\n                query={query} \n            />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}